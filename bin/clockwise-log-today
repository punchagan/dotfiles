#!/usr/bin/env python
import argparse
import datetime
import netrc
import sys

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.firefox.options import Options

FIREFOX_BINARY = "firefox-trunk"


def log_today(username, password, weekday, text, headless=False):
    options = Options()
    # FIXME: headless doesn't seem to work
    print("Headless doesn't seem to work with FF. Displaying browser...")
    options.headless = False
    browser = webdriver.Firefox(options=options, firefox_binary=FIREFOX_BINARY)
    browser.set_window_position(0, 0)
    browser.get("https://secure.clockwise.info/clockwise/akvo/index.php")
    wait = WebDriverWait(browser, 30)

    # Login
    username_xpath = "//input[@name='naam']"
    password_xpath = "//input[@name='wwoord']"
    submit_xpath = "//input[@name='inlogknop']"
    browser.find_element_by_xpath(username_xpath).send_keys(username)
    browser.find_element_by_xpath(password_xpath).send_keys(password)
    browser.find_element_by_xpath(submit_xpath).click()

    # Switch to correct frame
    table_frame = browser.find_element_by_xpath(
        '//frame[contains(@src, "matrix.php")]'
    )
    browser.switch_to.frame(table_frame)

    # Enter hours
    hours = browser.find_element_by_xpath(f'//input[@name="u_0{weekday}7"]')
    hours.clear()
    hours.send_keys("6")
    browser.find_element_by_id(f"p_0{weekday}7").click()

    # Enter metadata
    browser.switch_to.frame(
        browser.find_element_by_css_selector("#popup_frame")
    )
    textarea_selector = "table.KLEIN textarea"
    wait.until(
        EC.presence_of_element_located((By.CSS_SELECTOR, textarea_selector))
    )
    textarea = browser.find_element_by_css_selector(textarea_selector)
    textarea.clear()
    textarea.send_keys(text)
    browser.find_element_by_name("save").click()

    # Save
    browser.switch_to.parent_frame()
    browser.find_element_by_name("verwerken").click()

    return browser


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "text",
        nargs="?",
        default=sys.stdin,
        help="Text description for the log entry",
    )
    parser.add_argument("--weekday", default=None, help="Weekday (starts Mon)")
    parser.add_argument(
        "--headless",
        action="store_true",
        default=False,
        help="Headless browser",
    )

    options = parser.parse_args()
    rc = netrc.netrc()
    username, _, password = rc.authenticators("clockwise")
    weekday = options.weekday or str(datetime.datetime.now().weekday())

    if not isinstance(options.text, str):
        text = options.text.read()
    else:
        text = options.text

    browser = log_today(username, password, weekday, text, options.headless)
